/*
 * This file is generated by jOOQ.
 */
package edu.java.scrapper.domain.jooq_generated.tables.records;


import edu.java.scrapper.domain.jooq_generated.tables.Chats;

import java.beans.ConstructorProperties;
import java.time.OffsetDateTime;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChatsRecord extends UpdatableRecordImpl<ChatsRecord> implements Record3<Long, Long, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>CHATS.CHAT_ID</code>.
     */
    public void setChatId(@NotNull Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>CHATS.CHAT_ID</code>.
     */
    @NotNull
    public Long getChatId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>CHATS.TG_CHAT_ID</code>.
     */
    public void setTgChatId(@Nullable Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>CHATS.TG_CHAT_ID</code>.
     */
    @Nullable
    public Long getTgChatId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>CHATS.REGISTERED_AT</code>.
     */
    public void setRegisteredAt(@NotNull OffsetDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>CHATS.REGISTERED_AT</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public OffsetDateTime getRegisteredAt() {
        return (OffsetDateTime) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row3<Long, Long, OffsetDateTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row3<Long, Long, OffsetDateTime> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Long> field1() {
        return Chats.CHATS.CHAT_ID;
    }

    @Override
    @NotNull
    public Field<Long> field2() {
        return Chats.CHATS.TG_CHAT_ID;
    }

    @Override
    @NotNull
    public Field<OffsetDateTime> field3() {
        return Chats.CHATS.REGISTERED_AT;
    }

    @Override
    @NotNull
    public Long component1() {
        return getChatId();
    }

    @Override
    @Nullable
    public Long component2() {
        return getTgChatId();
    }

    @Override
    @NotNull
    public OffsetDateTime component3() {
        return getRegisteredAt();
    }

    @Override
    @NotNull
    public Long value1() {
        return getChatId();
    }

    @Override
    @Nullable
    public Long value2() {
        return getTgChatId();
    }

    @Override
    @NotNull
    public OffsetDateTime value3() {
        return getRegisteredAt();
    }

    @Override
    @NotNull
    public ChatsRecord value1(@NotNull Long value) {
        setChatId(value);
        return this;
    }

    @Override
    @NotNull
    public ChatsRecord value2(@Nullable Long value) {
        setTgChatId(value);
        return this;
    }

    @Override
    @NotNull
    public ChatsRecord value3(@NotNull OffsetDateTime value) {
        setRegisteredAt(value);
        return this;
    }

    @Override
    @NotNull
    public ChatsRecord values(@NotNull Long value1, @Nullable Long value2, @NotNull OffsetDateTime value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChatsRecord
     */
    public ChatsRecord() {
        super(Chats.CHATS);
    }

    /**
     * Create a detached, initialised ChatsRecord
     */
    @ConstructorProperties({ "chatId", "tgChatId", "registeredAt" })
    public ChatsRecord(@NotNull Long chatId, @Nullable Long tgChatId, @NotNull OffsetDateTime registeredAt) {
        super(Chats.CHATS);

        setChatId(chatId);
        setTgChatId(tgChatId);
        setRegisteredAt(registeredAt);
    }

    /**
     * Create a detached, initialised ChatsRecord
     */
    public ChatsRecord(edu.java.scrapper.domain.jooq_generated.tables.pojos.Chats value) {
        super(Chats.CHATS);

        if (value != null) {
            setChatId(value.getChatId());
            setTgChatId(value.getTgChatId());
            setRegisteredAt(value.getRegisteredAt());
        }
    }
}
