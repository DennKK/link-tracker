app:
  scheduler:
    enable: true
    interval: 10s
    force-check-delay: 900000 # 15 min
  access-type: jpa
  update-frequency: 10
  useQueue: true

  rate_limit: 3
  time_duration: 1
  nano_in_seconds: 1_000_000_000

  retry:
    status-codes: 500, 502, 503, 504
    enable: true
    policy: exponential

    linear:
      attempts: 5
      initial-backoff: 1s
      max-backoff: 10s

    constant:
      attempts: 3
      backoff: 5s

    exponential:
      attempts: 3
      initial-backoff: 1s
      max-backoff: 20s
      jitter: 0.5

  kafka:
    bootstrap-servers: localhost:29091,localhost:29092,localhost:29093

    consumer:
      group-id: scrapper-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      linger-ms: 10
      retries: 3
      max-in-flight-requests-per-connection: 1
      enable-idempotence: true

    topic:
      name: link-updates
      partitions: 3
      replicas: 3

spring:
  liquibase:
    enabled: false

  datasource:
    url: jdbc:postgresql://localhost:5432/scrapper
    username: postgres
    password: postgres
    driverClassName: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

  application:
    name: scrapper

server:
  port: 8080

logging:
  level:
    root: INFO
    edu.java.scheduler: DEBUG
  config: classpath:log4j2-plain.xml

springdoc:
  swagger-ui:
    path: /swagger-ui

management:
  server:
    port: 8083
  endpoints:
    web:
      base-path: /
      exposure:
        include: info,health,prometheus
      path-mapping:
        prometheus: metrics
    enabled-by-default: false
  endpoint:
    health:
      enabled: true
    info:
      enabled: true
    prometheus:
      enabled: true

  metrics:
    tags:
      application: ${spring.application.name}

